name: iOS构建

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    name: 构建与测试
    runs-on: macos-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      
    - name: 设置Xcode版本
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: 设置Ruby和CocoaPods
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
    
    - name: 安装依赖
      run: |
        gem install cocoapods
        pod install --repo-update
      working-directory: ${{ github.workspace }}
      
    - name: 构建应用
      run: |
        xcodebuild clean build -workspace "iDevice_ZH.xcworkspace" -scheme "iDevice_ZH" -destination "platform=iOS Simulator,name=iPhone 14 Pro" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
      working-directory: ${{ github.workspace }}
      
    - name: 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: |
          ${{ github.workspace }}/build/Release-iphonesimulator/iDevice_ZH.app
          
  archive:
    name: 归档IPA
    needs: build
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      
    - name: 设置Xcode版本
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: 安装证书和配置文件
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # 创建临时keychain
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # 导入证书到keychain
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
        # 安装配置文件
        PROFILE_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PROFILE_PATH
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
    - name: 构建和归档
      env:
        PROFILE_UUID: ${{ secrets.PROFILE_UUID }}
      run: |
        xcodebuild -workspace "iDevice_ZH.xcworkspace" -scheme "iDevice_ZH" -archivePath $RUNNER_TEMP/iDevice_ZH.xcarchive archive -allowProvisioningUpdates
        xcodebuild -exportArchive -archivePath $RUNNER_TEMP/iDevice_ZH.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath $RUNNER_TEMP/build
      
    - name: 上传IPA
      uses: actions/upload-artifact@v3
      with:
        name: iDevice_ZH-IPA
        path: ${{ runner.temp }}/build/*.ipa
        
